module core;

public sealed type Char extends NaturallyOrdered[Char] {
  public Unit init(Int ord) {
  }

  public Char toUpperCase() {
  }

  public Char toLowerCase() {
  }

  public Bool isLetter() {
  }

  public Bool isDigit() {
  }

  public Bool ==(Top o) {}

  public Int hashCode() {
    return new Int(this).hashCode();
  }

  public String toString() {
  }

  public Ordering[Char] naturalOrdering() {
    return AscendingCharOrdering();
  }
}

public type AscendingCharOrdering extends Ordering[Char] {
  private static readonly AscendingCharOrdering singleton;

  private Unit init() {}

  private static Unit init() {
    AscendingCharOrdering.singleton = new AscendingCharOrdering();
  }

  public static AscendingCharOrdering get() {
    return AscendingCharOrdering.singleton;
  }

  public Some[Relation] compare(Char a, Char b) {
  }
}
