module core;

public sealed type Byte extends NaturallyOrdered[Byte] {
  public Unit init(Int n) {}
  public Unit init(Long n) {}
  public Unit init(Char c) {}

  public Byte +() {}
  public Byte -() {}
  public Byte ~() {}

  public Byte +(Byte that) {}
  public Byte -(Byte that) {}

  public Byte *(Byte that) {}
  public Byte /(Byte that) {}
  public Byte %(Byte that) {}

  public Byte |(Byte that) {}
  public Byte ^(Byte that) {}
  public Byte &(Byte that) {}

  public Byte <<(Byte that) {}
  public Byte >>(Byte that) {}
  public Byte >>>(Byte that) {}

  public Relation compareTo(Byte that) {}

  public Byte rotateLeft(Int distance) {}
  public Byte rotateRight(Int distance) {}

  public Byte min(Byte that) {
    return new NaturalOrdering[Byte]().min(this, that);
  }

  public Byte max(Byte that) {
    return new NaturalOrdering[Byte]().max(this, that);
  }

  public Byte abs() {
    if (this < new Byte(0))
      return -this;
    return this;
  }

  public Int signum() {
    return new Int(this).signum();
  }

  public Bool ==(Top o) {}

  public Int hashCode() {
    return new Int(this).hashCode();
  }

  public String toString() {
    return new Int(this).toString();
  }
}
