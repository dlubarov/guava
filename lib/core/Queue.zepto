module core;

abstract type Queue[+T] extends Sequence[T] {
  T getFront();
  T getBack();
}

abstract type MutableQueue[T] extends Queue[T] {
  Unit pushBack(T elem);
  Unit popFront(T elem);
}

abstract type ImmutableQueue[T] extends Queue[T] {
  Queue[T] pushBack(T elem);
  Queue[T] popFront(T elem);
}
