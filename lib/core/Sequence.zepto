module core;

public type Sequence[+T] extends Collection[T] {
  public Sequence[T] map(Function1[T, T] f) {
  }

  public Sequence[T] replace(T a, T b) {
  }

  public Sequence[T] replace(Sequence[T] a, Sequence[T] b) {
  }

  public Sequence[T] subsequence(Int a, Int b) {
  }

  # TODO: decide names for "get first/last n elements"
  # front/first/head, back/last/tail

  public Bool startsWith(Sequence[T] s) {
  }

  public Bool endsWith(Sequence[T] s) {
  }

  public Boolean equals(Top o) {
  }

  public Int hashCode() {
  }

  public String toString() {
    return "(" + ", ".join(toSequence()) + ")";
  }
}
