module core;

public abstract type MutableStack[T] extends MutableSequence[T] {
  public Unit pushBack(T value);

  public Unit pushBackAll(Sequence[T] values);

  public T popBack();
}

public abstract type ImmutableStack[+T] extends ImmutableSequence[T] {
  [U > T]
  public ImmutableStack[U] pushBack[U](U value);

  [U > T]
  public ImmutableStack[U] pushBackAll[U](Sequence[U] values);

  public ImmutableStack[T] popBack();
}
