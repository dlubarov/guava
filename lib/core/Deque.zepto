module core;

public abstract type Deque[T] extends Stack[T], Queue[T] {
}

public abstract type MutableDeque[T] extends Deque[T], MutableStack[T], MutableQueue[T] {
  public Unit pushFront(T elem);
  public Unit pushBack(T elem);
  public T popFront();
  public T popBack();
}

public abstract type ImmutableDeque[T] extends Deque[T], ImmutableStack[T], ImmutableQueue[T] {
  public ImmutableDeque[T] pushFront(T elem);
  public ImmutableDeque[T] pushBack(T elem);
  public ImmutableDeque[T] popFront();
  public ImmutableDeque[T] popBack();
}
